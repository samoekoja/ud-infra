# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  destroy_environment:
    steps: 
      - run:
          name: Destroy 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
            --region us-east-1
  
  # configure_infrastructure:
  #   docker:
  #     - image: python:3.7-alpine3.11

  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #             fingerprints: ["36:b0:32:dc:9e:13:e1:d1:97:e3:81:f7:01:b3:e3:d5"]

  #     - run:
  #         name: install ansible
  #         command: apk add --update ansible

  #     - run:
  #         name: Run Playboook
  #         command: ansible-playbook -i inventory main-remote.yml

  
  smoke_test:
    docker:
      - image: amazon/aws-cli

    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment 
        


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  ek.workflow:
    jobs:
      - create-infrastructure
      - smoke_test:
          requires: [create-infrastructure]
